{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAUH,SAASC,cAAc,oBAEjCG,EAAO,SAACC,EAAKC,GACjB,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,E,GAIjCE,EAAO,SAAAT,GACX,IACE,IAAME,EAAkBG,aAAaK,QAAQV,GAC7C,OAA0B,MAAnBE,OAA0BS,EAAYR,KAAKS,MAAMV,E,CACxD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,E,GAIvCb,EAAKmB,iBACH,QACAC,EAAAtB,GAAEuB,UAAS,SAAAC,GACT,IAAIC,EAAW,CACbC,MAAOrB,EAAMI,MACbkB,QAASrB,EAAQG,OAEnBF,EAAK,sBAAuBkB,E,GAC3B,MAGLG,OAAOC,OAAS,SAAAL,GACVP,EAAK,wBAA0BA,EAAK,uBAAuBS,QAC7DrB,EAAMI,MAAQQ,EAAK,uBAAuBS,OAExCT,EAAK,wBAA0BA,EAAK,uBAAuBU,UAC7DrB,EAAQG,MAAQQ,EAAK,uBAAuBU,Q,EAIhDzB,EAAKmB,iBAAiB,UAAU,SAAAG,GAC9BA,EAAMM,iBACDzB,EAAMI,OAAUH,EAAQG,QAG7BO,QAAQe,IAAId,EAAK,wBACjBf,EAAK8B,QACLzB,EAAK,sBAAuB,CAAEmB,MAAO,GAAIC,QAAS,K","sources":["src/js/03-feedback.js"],"sourcesContent":["import _ from 'lodash';\n\nconst form = document.querySelector('.feedback-form');\nconst email = document.querySelector(\"[name='email']\");\nconst message = document.querySelector(\"[name='message']\");\n\nconst save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState == null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error);\n  }\n};\n\nform.addEventListener(\n  'input',\n  _.throttle(event => {\n    let formData = {\n      email: email.value,\n      message: message.value,\n    };\n    save('feedback-form-state', formData);\n  }, 500)\n);\n\nwindow.onload = event => {\n  if (load('feedback-form-state') && load('feedback-form-state').email) {\n    email.value = load('feedback-form-state').email;\n  }\n  if (load('feedback-form-state') && load('feedback-form-state').message) {\n    message.value = load('feedback-form-state').message;\n  }\n};\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  if (!email.value || !message.value) {\n    return;\n  }\n  console.log(load('feedback-form-state'));\n  form.reset();\n  save('feedback-form-state', { email: '', message: '' });\n});\n"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$email","$b00c40859be242c5$var$message","$b00c40859be242c5$var$save","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","$b00c40859be242c5$var$load","getItem","undefined","parse","addEventListener","$parcel$interopDefault","throttle","event","formData","email","message","window","onload","preventDefault","log","reset"],"version":3,"file":"03-feedback.99dd8cc6.js.map"}